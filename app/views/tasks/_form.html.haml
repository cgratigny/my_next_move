= simple_form_for [@taskable, task], class: "contents" do |form|
  - if task.errors.any?
    #error_explanation.bg-red-50.text-red-500.px-3.py-2.font-medium.rounded-lg.mt-3
      %h2
        = pluralize(task.errors.count, "error")
        prohibited this task from being saved:
      %ul
        - task.errors.each do |error|

          %li= error.full_message
  
  = form.input :name

  - if form.object.persisted?
    = form.input :state, collection: TaskState.select_options, label: "Status"
    
  = form.input :body, as: :rich_text_area, label: "Detail"
  = form.input :due_date, as: :datepicker, label: "Due On"

  .flex
    .grow.text-right.pr-1
      = render Common::Element::DestroyLinkComponent.new(model: @task, text: "Destroy")

      = link_to [:blank_turbo_frame, { id: dom_id(task) }] do
        = render(Primer::Beta::Button.new(scheme: :secondary, type: :button)) { "Cancel" }
    .submit
      = render(Primer::Beta::Button.new(scheme: :primary, type: :submit)) { "Save"}


