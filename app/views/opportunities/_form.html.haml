= simple_form_for @opportunity, data: { controller: "form-toggler" } do |form|
  = render Common::Form::ErrorsComponent.new(form: form)

  = render Common::Layout::TitleComponent.new(title: "Company Info", priority: 4)

  #existing-company
    = form.association :company, label: "Choose Existing Company", collection: Current.user.companies.distinct.alphabetical, include_blank: true, input_html: { class: "form-control", data: { action: "input->form-toggler#changed", form_toggler_target: :select, form_toggler_group: :company } }

  -# This hack of adding values of "," will compare a blank value, making this show when the value is blank, and hiding when the value is present
  #new-company-fields.form-control{ data: { form_toggler_target: :element, values: ",", form_toggler_group: :company } }
    = form.simple_fields_for :company, opportunity.company || Company.new do |company_form|
      = company_form.input :name, label: "Company Name"
      = company_form.input :uri, label: "Company Website"

  %h4.font-bold.text-m.mb-2 Opportunity Info
  = form.input :name
  = form.input :rating, as: :radio_buttons, collection: OpportunityRating.select_options
  = form.input :uri, label: "Opportunity Website"
  = form.input :posted_on, label: "Posting Website"

  %h4.font-bold.text-m.mb-2 Status
  = form.input :state, collection: OpportunityState.select_options, input_html: { class: "form-control", data: { action: "input->form-toggler#changed", form_toggler_target: :select, form_toggler_group: :opportunity } }

  = form.input :applied_on, as: :datepicker, wrapper_html: { data: { form_toggler_target: :element, values: [:application_submitted, :on_hold, :withdrawn, :rejected].join(","), form_toggler_group: :opportunity } }, input_html: { class: "form-control" }

  = form.input :body, as: :rich_text_area
  = form.association :move, input_html: { value: Current.user.default_move }

  = render Common::Form::SubmitComponent.new(form: form)

= render Common::Element::DestroyLinkComponent.new(model: @opportunity, text: "Destroy")
