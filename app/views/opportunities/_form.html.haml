%turbo-frame{:id => "#{dom_id @opportunity}" }
  = simple_form_for @opportunity, data: { controller: "form-toggler", turbo_frame: :_top } do |form|
    = render Common::Form::ErrorsComponent.new(form: form)

    .card
      = render Common::Layout::TitleComponent.new(title: "Basic Info", priority: 4)
      = form.input :name
      = form.input :uri, label: "Posting URL"

      = form.input :state, label: "Status", collection: OpportunityState.select_options, input_html: { class: "form-control", data: { action: "input->form-toggler#changed", form_toggler_target: :select, form_toggler_group: :opportunity } }
      = form.input :applied_on, as: :datepicker, wrapper_html: { data: { form_toggler_target: :element, values: [:application_submitted, :on_hold, :withdrawn, :rejected].join(","), form_toggler_group: :opportunity } }, input_html: { class: "form-control" }

    .card
      = render Common::Layout::TitleComponent.new(title: "Company Info", priority: 4)

      #existing-company
        = form.association :company, label: (form.object.persisted? ? "Linked Company" : "Choose Existing Company"), collection: Current.user.companies.distinct.alphabetical, include_blank: true, input_html: { class: "form-control", data: { action: "input->form-toggler#changed", form_toggler_target: :select, form_toggler_group: :company } }

      -# This hack of adding values of "," will compare a blank value, making this show when the value is blank, and hiding when the value is present
      #new-company-fields.form-control{ data: { form_toggler_target: :element, values: ",", form_toggler_group: :company } }
        = form.simple_fields_for :company, opportunity.company || Company.new do |company_form|
          = company_form.input :name, label: "Company Name"
          = company_form.input :uri, label: "Company Website"


    .card
      = render Common::Layout::TitleComponent.new(title: "Categorization", priority: 4)

      = form.input :tag_list, as: :hidden, input_html: { value: form.object.tag_list.join(','), id: 'hidden-tag-list' }

      %div{"data-controller" => "tags-input"}
        = form.input :tags_input, name: nil, label: "Tags", input_html: {"data-action" => "keyup->tags-input#addTag", "data-target" => "tags-input.input", placeholder: "Add tags", type: "text"}
        %span.tags-list{"data-tags-input-target":  "tagsList"}

      = form.input :rating, as: :radio_buttons, collection: OpportunityRating.select_options


    .card
      = render Common::Layout::TitleComponent.new(title: "Details", priority: 4)

      = form.input :posted_on, label: "Posting Service"


      = form.input :body, as: :rich_text_area


    = form.input :move_id, as: :hidden, input_html: { value: Current.user.default_move.id }

    .card
      = render Common::Form::SubmitComponent.new(form: form)

= render Common::Element::DestroyLinkComponent.new(model: @opportunity, text: "Destroy", args: { data: { turbo_frame: :_top } } )
