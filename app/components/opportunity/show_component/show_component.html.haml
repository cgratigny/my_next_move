%div.text-xs{:id => "#{dom_id opportunity}"}
  %turbo-frame{:id => "#{dom_id opportunity}", target: :_top }
    %div{ class: show? ? "card" : "" }
      %span{ class: opportunity.state.tailwind_class}
        = link_to [:opportunities, { search: opportunity.state.text } ] do
          = opportunity.state.text

      - opportunity.tags.each do |tag|
        = link_to [:opportunities, { search: tag.to_s } ] do
          %span.p-1.bg-slate-200.dark:bg-slate-700.rounded= tag

      .float-right
        - OpportunityRating.selectable.each do |rating|
          = button_to opportunity, method: :patch, data: { turbo_frame: dom_id(opportunity) }, params: { opportunity: { rating: }}, form: { class: :inline } do
            - if rating.to_i <= opportunity.rating.to_i
              %span= heroicon(:fire, variant: :micro, size: 12, class: "m-[-1px] p-[-1px] inline text-orange-700")
            - else
              %span= heroicon(:fire, variant: :micro, size: 12, class: "m-[-1px] p-[-1px] inline text-slate-200 dark:text-slate-700")

      .title.mb-2.mt-2
        %div.font-semibold
          = opportunity.company.name
          - if opportunity.company.uri.present?
            %span
              = link_to opportunity.company.uri, target: :_blank do
                = heroicon "arrow-top-right-on-square", size: 16, class: "pb-0.5 inline"

        %div.text-s.text-slate-700.text-xs.dark:text-slate-200
          = link_to opportunity.name, opportunity
          - if opportunity.uri.present?
            %span
              = link_to opportunity.uri, target: :_blank do
                = heroicon "arrow-top-right-on-square", size: 16, class: "pb-0.5 inline"
          = link_to [:edit, opportunity] do
            = heroicon "cog-6-tooth", size: 16, class: "pb-0.5 inline"

      %br
      Added
      = opportunity.created_at.to_fs
      - if show?
        = render Common::Element::ExpandableContentComponent.new(content: opportunity.body.to_s)

.m-2
- if show?
  .card
    .float-right
      = render Common::Element::ButtonComponent.new(label: "Add Task", path: [:new, opportunity, :task], custom_args: { data: { turbo_frame: :new_task } } )
    %h3.text-lg.font-semi-bold.border-b.border-slate-600.mb-4.pb-2 Tasks
    %turbo-frame{ id: dom_id(Task.new) }
    = render "tasks/list", tasks: opportunity.tasks
- else
  %span.text-xs= pluralize(opportunity.tasks_count, "Task")

%br

- if show?
  .card
    .float-right
      = render Common::Element::ButtonComponent.new(label: "Add Note", path: [:new, opportunity, :note], custom_args: { data: { turbo_frame: :new_note } } )
    %h3.text-lg.font-semi-bold.border-b.border-slate-600.mb-4.pb-2 Notes
    %turbo-frame{ id: dom_id(Note.new) }
    = render "notes/list", notes: opportunity.notes.reverse_chronological
- else
  %span.text-xs= pluralize(opportunity.notes_count, "Note")

.mb-10

